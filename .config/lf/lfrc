# Basic Settings
set shell zsh
set hidden true
set color256 true
set drawbox true
set icons true
set ignorecase true
set scrolloff 10
set ifs "\n" # internal field separator

# Custom Commands
# define a custom 'open' command
cmd open ${{
    case $(file --mime-type $f -b) in
        text/*|application/r/python) $EDITOR $fx;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

# change mode
cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done
}}

# define a custom 'delete' command
cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ $ans = "y" ] && rm -rf $fx
}}

# extract the current file with the right command
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
        *) echo "Unsupported format" ;;
    esac
}}

# archive files with the right command
cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

# set wallpaper
cmd setwallpaper %cp "$f" ~/.config/wall.png && feh --bg-scale --no-fehbf "$f"

# Bindings
map "''"
map c
map m
map <esc> quit # Escape to quit

# File Openers
map ee $$EDITOR "$f"
map es $sudo $EDITOR "$f"

# Archive Mappings
map az zip
map at tar
map ag targz
map ab tarbz2
map au extract

# Basic Functions
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map bm mark-save
map mf mkfile
map mr sudomkfile
map md mkdir
map ms $mkscript
map ch chmod
map bg setwallpaper
map r rename
map H top
map L bottom
map R reload
map C clear
map U unselect
map g mark-load
